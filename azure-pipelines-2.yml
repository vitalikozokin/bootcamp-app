# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# trigger:
# - main

# stages:
#   - stage: build
#     displayName: build stage
#     jobs:
#       - job: build
#         displayName: build
#         pool:
#           name: bootcamp
#   steps:
#   - task: NodeTool@0
#     inputs:
#       versionSpec: '14.x'
#   - script: |
#       npm install
#     displayName: 'npm install '         
#   - task: ArchiveFiles@2
#     inputs:
#       rootFolderOrFile: '$(Build.BinariesDirectory)'
#       includeRootFolder: false
#       archiveType: 'zip'
#       archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#       replaceExistingArchive: true

#   - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
#     artifact: drop

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     environment: 'staging'
#     pool: 
#       name: bootcamp
#     strategy:
#       runOnce:
#         deploy:
#           steps:            
#           - task: Bash@3
#             inputs:
#               targetType: 'inline'
#               script: |
#                 sudo apt install nginx 
#                 sudo apt install cowsay
#           - task: ExtractFiles@1
#             inputs:
#               archiveFilePatterns: '**/*.zip'
#               destinationFolder: '\home\ubuntu\bootcamp-app'
#               cleanDestinationFolder: true
#               overwriteExistingFiles: true
trigger:
- main
variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '00001111-0000-1111-2222-000011112222'
  
  # Web app name
  webAppName: 'nodejs-cicd-16353'
  
  # Environment name
  environmentName: 'nodejs-cicd-16353'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'
      - script: |
            npm install
            npm run build --if-present
            npm run test --if-present
        displayName: 'npm install, build and test'
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true

      - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        artifact: drop